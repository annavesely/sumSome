% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brainPvals.R
\name{brainPvals}
\alias{brainPvals}
\title{Permutation p-Values for Brain Imaging}
\usage{
brainPvals(copes, mask = NULL, alternative = "two.sided", alpha = 0.05, B = 1000, seed = NULL,
           truncFrom = alpha, truncTo = min(alpha, 0.5), type = "vovk.wang", r = 0, rand = FALSE)
}
\arguments{
\item{copes}{list of 3D numeric arrays (contrasts maps for each subject).}

\item{mask}{3D logical array, where \code{TRUE} values correspond to voxels inside the brain, or character for a Nifti file name.}

\item{alternative}{direction of the alternative hypothesis (\code{greater}, \code{lower}, \code{two.sided}).}

\item{alpha}{significance level.}

\item{B}{number of permutations, including the identity.}

\item{seed}{seed.}

\item{truncFrom}{truncation parameter: values greater than \code{truncFrom} are truncated.
If \code{NULL}, p-values are not truncated.}

\item{truncTo}{truncation parameter: truncated values are set to \code{truncTo}.
If \code{NULL}, p-values are not truncated.}

\item{type}{p-value combination (\code{edgington}, \code{fisher}, \code{pearson}, \code{liptak},
\code{cauchy}, \code{vovk.wang})}

\item{r}{parameter for Vovk and Wang's p-value combination.}

\item{rand}{logical, \code{TRUE} to compute p-values by permutation distribution.}
}
\value{
\code{brainPvals} returns an object of class \code{sumBrain}, containing
\itemize{
\item \code{statistics}: numeric matrix of p-values, where columns correspond to voxels inside the brain, and rows to permutations.
The first permutation is the identity
\item \code{mask}: 3D logical array, where \code{TRUE} values correspond to voxels inside the brain
\item \code{alpha}: significance level
\item \code{truncFrom}: transformed first truncation parameter
\item \code{truncTo}: transformed second truncation parameter
}
}
\description{
This function computes p-value combinations for different permutations of brain imaging data.
A voxel's p-value is calculated by performing the one-sample t test
for the null hypothesis that its mean contrast over the different subjects is zero.
}
\details{
A p-value \code{p} is transformed as following.
\itemize{
\item Edgington: \code{-p}
\item Fisher: \code{-log(p)}
\item Pearson: \code{log(1-p)}
\item Liptak: \code{-qnorm(p)}
\item Cauchy: \code{tan(0.5 - p)/p}
\item Vovk and Wang: \code{- sign(r)p^r}
}
An error message is returned if the transformation produces infinite values.

Truncation parameters should be such that \code{truncTo} is not smaller than \code{truncFrom}.
As Pearson's and Liptak's transformations produce infinite values in 1, for such methods
\code{truncTo} should be strictly smaller than 1.

The significance level \code{alpha} should be in the interval [1/\code{B}, 1).
}
\examples{
# if needed, install the package fMRIdata from Github
devtools::install_github("angeella/fMRIdata")

library(fMRIdata)
data("Auditory_copes")
data("Auditory_mask")
data("Auditory_clusterTH3_2")

# create object of class sumBrain (combination: Cauchy)
res <- brainPvals(copes = Auditory_copes, mask = Auditory_mask, B = 200, type = "cauchy", seed = 42)

res
summary(res)

# confidence bound for the number of true discoveries and the true discovery proportion within clusters
# (may require some minutes)
out <- clusterAnalysis(res, clusters = Auditory_clusterTH3_2, nMax = 50)

# write the TDP map as Nifti file: download mask.nii.gz in the working directory
# from https://github.com/angeella/fMRIdata/blob/master/data-raw/AuditoryData
library(RNifti)
RNifti::writeNifti(out$TDPmap, file = "TDPmap.nii.gz", template = "mask.nii.gz")
}
\author{
Anna Vesely.
}
